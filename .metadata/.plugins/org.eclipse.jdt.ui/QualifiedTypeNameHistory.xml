<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.authentication.openfeignclients.FeignClientValidate"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.authentication.dto.Post"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.authentication.dto.UserPruebaSwagger"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.authentication.config.KeycloakConfig"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.authentication.dto.UserResponse"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.authentication.dto.UserRequest"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.cdi.MongoRepositoryBean"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.documents.service.GenericService"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.documents.service.DocumentService"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.documents.mapper.DocumentMapper"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.documents.dto.DocumentDTO"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.documents.domain.Documents"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.documents.repository.DocumentRepository"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.documents.openfeignclients.FeignClientValidate"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.DocumentReference"/>
    <fullyQualifiedTypeName name="com.carpetaciudadana.documents.dto.DocumentRequest"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="com.example.demospringfirestore.model.Persona"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="com.google.cloud.storage.BlobId"/>
    <fullyQualifiedTypeName name="com.google.cloud.storage.BlobInfo"/>
    <fullyQualifiedTypeName name="com.google.auth.Credentials"/>
    <fullyQualifiedTypeName name="com.google.auth.oauth2.GoogleCredentials"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="com.google.cloud.storage.Storage"/>
    <fullyQualifiedTypeName name="com.google.cloud.storage.StorageOptions"/>
    <fullyQualifiedTypeName name="com.google.common.io.Files"/>
    <fullyQualifiedTypeName name="java.nio.file.Files"/>
    <fullyQualifiedTypeName name="org.springframework.web.multipart.MultipartFile"/>
    <fullyQualifiedTypeName name="java.io.FileOutputStream"/>
    <fullyQualifiedTypeName name="java.nio.charset.StandardCharsets"/>
    <fullyQualifiedTypeName name="java.net.URLEncoder"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.EnableAutoConfiguration"/>
</qualifiedTypeNameHistroy>
